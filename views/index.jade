extends layout.jade

block extra-scripts
  //- build:js /scripts/home.js
  script(src="/js/landing.js")
  //- endbuild

block page-content
  .hero-section
    canvas
    .navbar-bee
      .row
        .col-md-4
          img(src="./img/logo.svg")
        .col-md-8
          ul.text-right
            if user
              a(href='/logout') Logout
            else
              li
                a(href='javascript:LoginWorker()')
                  span.glyphicon.glyphicon-user
                  | &nbsp; Login as Worker

              li
                a(href='javascript:LoginOwner()')
                  span.glyphicon.glyphicon-console
                  | &nbsp; Login as Employer
              li
                a(href='#') Sign up

      .hero-section-container
        h1 Code is art
        h3 We connect the world with great developers
        button.btn.btn-primary.btn-lg(type='button') Get started now

      .steps-container
        ul
          li
            img(src="img/1.svg")
            h4 Take your project
          li
            img(src="img/2.svg")
            h4 Launch your contest
          li
            img(src="img/3.svg")
            h4 Recieve tons of code
          li
            img(src="img/4.svg")
            h4 Review the code
          li
            img(src="img/5.svg")
            h4 Pick the winner

    section.choose
      h1 What project are you working on?

      .choose-box
        .row
          .col-md-3
            a.block.category.clip.hover-bg-color-art.category-1(href='/list')
              .category-project-count.full-height.mobile-table
                  .mobile-table-cell
                    .h4 382 live projects
                .category-name.mobile-table.full-height
                  .mobile-table-cell
                    .h3 iOS

          .col-md-3
            a.block.category.clip.hover-bg-color-art.category-2(href='/list')
              .category-project-count.full-height.mobile-table
                  .mobile-table-cell
                    .h4 312 live projects
                .category-name.mobile-table.full-height
                  .mobile-table-cell
                    .h3 Android

          .col-md-3
            a.block.category.clip.hover-bg-color-art.category-3(href='/list')
              .category-project-count.full-height.mobile-table
                  .mobile-table-cell
                    .h4 167 live projects
                .category-name.mobile-table.full-height
                  .mobile-table-cell
                    .h3 Node.js

          .col-md-3
            a.block.category.clip.hover-bg-color-art.category-4(href='/list')
              .category-project-count.full-height.mobile-table
                  .mobile-table-cell
                    .h4 345 live projects
                .category-name.mobile-table.full-height
                  .mobile-table-cell
                    .h3 Ruby

          .col-md-3
            a.block.category.clip.hover-bg-color-art.category-5(href='/list')
              .category-project-count.full-height.mobile-table
                  .mobile-table-cell
                    .h4 132 live projects
                .category-name.mobile-table.full-height
                  .mobile-table-cell
                    .h3 go

          .col-md-3
            a.block.category.clip.hover-bg-color-art.category-6(href='/list')
              .category-project-count.full-height.mobile-table
                  .mobile-table-cell
                    .h4 82 live projects
                .category-name.mobile-table.full-height
                  .mobile-table-cell
                    .h3 php

          .col-md-3
            a.block.category.clip.hover-bg-color-art.category-7(href='/list')
              .category-project-count.full-height.mobile-table
                  .mobile-table-cell
                    .h4 882 live projects
                .category-name.mobile-table.full-height
                  .mobile-table-cell
                    .h3 Angular.js

          .col-md-3
            a.block.category.clip.hover-bg-color-art.category-8(href='/list')
              .category-project-count.full-height.mobile-table
                  .mobile-table-cell
                    .h4 35 live projects
                .category-name.mobile-table.full-height
                  .mobile-table-cell
                    .h3 Scala

    footer
      .text-center
        img(src="img/logo-white.svg")
    script.
      var BackgroundAnimation = (function() {

        function Blob(attr) {
          this.drawStyle = attr.drawStyle;
          this.points = attr.points;
          this.color = attr.color;
        }

        Blob.prototype.render = function(ctx) {
          var firstPoint, ctrlPoint, nextPoint,
              that = this;

          firstPoint = this.points[0];

          ctx.save();
          ctx.strokeStyle = this.color;
          ctx.fillStyle = this.color;
          ctx.lineWidth = 0.5;
          ctx.lineJoin = 'round';
          ctx.lineCap = 'round';
          ctx.beginPath();
          ctx.moveTo(this.points[0].x, this.points[0].y);
          this.points.forEach(function(p, i) {

            nextPoint = that.points[i + 1];
            if (nextPoint) {
              ctrlPoint = {
                x: (p.x + nextPoint.x) / 2,
                y: (p.y + nextPoint.y) / 2
              };
              ctx.quadraticCurveTo(p.x, p.y, ctrlPoint.x, ctrlPoint.y);
            } else {
              ctrlPoint = {
                x: (that.points[that.points.length - 1].x + firstPoint.x) / 2,
                y: (that.points[that.points.length - 1].y + firstPoint.y) / 2
              };
              ctx.quadraticCurveTo(
                that.points[that.points.length - 1].x,
                that.points[that.points.length - 1].y,
                ctrlPoint.x, ctrlPoint.y
              ) ;
            }
          });
          ctx.closePath();
          if (this.drawStyle === 'stroke') {
            ctx.stroke();
          } else if (this.drawStyle === 'fill') {
            ctx.fill();
          }
          ctx.restore();
        };

        var width, height,
            canvas, ctx,
            blobs;

        function init(size, cnvs) {
          width = size.width;
          height = size.height;
          canvas = cnvs;
          ctx = canvas.getContext('2d');

          canvas.width = width;
          canvas.height = height;

          blobs = generateBlobs(14);

          ctx.fillStyle = '#212020';
        }

        function generateBlobs(num) {
          var i, blob, blobs,
              point, x, y,
              angle, radius,
              drawStyle, color,
              offset,
              divider;

          blobs = [];
          divider = 7;

          for (i = 1; i < num; i += 1) {
            blob = [];
            for (angle = 0; angle <= Math.PI * 2; angle += 0.45) {
              offset = -20 + Math.random() * 20;
              if (i === 1) {
                radius = height / divider * (i * 1.5);
                drawStyle = 'fill';
                color = '#212020';
              } else if (i === 2) {
                radius = height / divider * (i * 1.2);
                drawStyle = 'stroke';
                color = '#976516';
              } else if (i === 3) {
                radius = height / divider * (i * 0.8);
                drawStyle = 'stroke';
                color = '#976516';
              }
              x = width / 1.1 + Math.sin(angle) * radius;
              y = height / 1.1 + Math.cos(angle) * radius;
              point = {
                x: x, y: y,
                targetX: x + offset, targetY: y + offset,
                angle: Math.random() * (Math.PI * 2),
                speed: .00125 + Math.random() * 0.00125
              };
              blob.push(point);
            }
            blobs.push(new Blob({
              drawStyle: drawStyle,
              points: blob,
              color: color
            }));
          }
          return blobs;
        }

        function render() {
          ctx.fillRect(0, 0, width, height);
          blobs.forEach(renderBlob);
        }

        function renderBlob(blob) {
          blob.points.forEach(updatePoint);
          blob.render(ctx);
        }

        function updatePoint(p, i) {
          var radius;

          radius = 1.5;

          p.x = p.x + Math.sin(p.angle) * radius;
          p.y = p.y + Math.cos(p.angle) * radius;

          i % 2 === 0 ? p.angle += p.speed : p.angle -= p.speed;
        }

        return {
          init: init,
          render: render
        };

      }());

      BackgroundAnimation.init(
        { width: window.innerWidth, height: window.innerHeight },
        document.querySelector('canvas')
      );

      (function renderFrame() {
        window.requestAnimationFrame(renderFrame);
        BackgroundAnimation.render();
      }());
